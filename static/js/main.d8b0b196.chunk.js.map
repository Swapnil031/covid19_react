{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/coronaImage.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handelCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8b0b196.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1KwFd\",\"card\":\"Cards_card__3v_NQ\",\"infected\":\"Cards_infected__6qp2n\",\"recovered\":\"Cards_recovered__26Iwa\",\"deaths\":\"Cards_deaths__3riqP\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate}}) => {\r\n\tconsole.log(lastUpdate);\r\n\tif(!confirmed){\r\n\t\treturn 'Loading....';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={1.5} separator=\",\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">No. of active cases of COVID-19</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={1.5} separator=\",\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">No. of recoveries from COVID-19</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={1.5} separator=\",\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">No. of deaths by COVID-19</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet changeableUrl = url;\r\n\r\n\tif (country) {\r\n\t\tchangeableUrl = `${url}/countries/${country}`;\r\n\t}\r\n\r\n\ttry{\r\n\t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n\t\treturn { confirmed, recovered, deaths, lastUpdate};\r\n\t} \r\n\tcatch (error){\r\n\r\n\t}\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst {data} = await axios.get(`${url}/daily`);\r\n\r\n\t\t\r\n\t\tconst modifiedData = data.map((dailyData) => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate,\r\n\t\t}));\r\n\r\n\t\treturn modifiedData;\r\n\t}\r\n\tcatch (error){\r\n\r\n\t}\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n\t\treturn countries.map((country) => country.name);\r\n\t}\r\n\tcatch(error){\r\n\r\n\t}\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: {confirmed, recovered, deaths}, country }) => {\r\n\tconst [dailyData, setDailyData] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t}\r\n\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\tconst lineChart = (\r\n\t\tdailyData.length ? \r\n\t\t  (\r\n\t\t  \t<Line \r\n\t\t  \t\tdata={{\r\n\t\t  \t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t  \t\t\tdatasets: [{\r\n\t\t  \t\t\t  data: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t  \t\t\t  label: 'Infected',\r\n\t\t  \t\t\t  borderColor: '#3333ff',\r\n\t\t  \t\t\t  fill: true,\r\n\t\t  \t\t\t}, {\r\n\t\t  \t\t\t  data: dailyData.map(({ deaths }) => deaths),\r\n\t\t  \t\t\t  label: 'Deaths',\r\n\t\t  \t\t\t  borderColor: 'red',\r\n\t\t  \t\t\t  backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n\t\t  \t\t\t  fill: true,\r\n\t\t  \t\t\t}],\r\n\t\t  \t\t}}\r\n\t\t  \t/>\r\n\t\t  ) : null\r\n\t);\r\n\r\n\tconst barChart = (\r\n\t\tconfirmed ?\r\n\t\t  (\r\n\t\t  \t<Bar \r\n\t\t  \t\tdata={{\r\n\t\t  \t\t\tlabels: ['Infected', 'Recovered', \"Deaths\"],\r\n\t\t  \t\t\tdatasets: [{\r\n\t\t  \t\t\t  label: 'People',\r\n\t\t  \t\t\t  backgroundColor: [\r\n\t\t  \t\t\t  \t'rgba(0,0,255,0.5)',\r\n\t\t  \t\t\t  \t'rgba(0,255,0,0.5)',\r\n\t\t  \t\t\t  \t'rgba(255,0,0,0.5)',\r\n\t\t  \t\t\t  ],\r\n\t\t  \t\t\t  data: [confirmed.value, recovered.value, deaths.value]\r\n\t\t  \t\t\t}],\r\n\t\t  \t\t}}\r\n\t\t  \t\toptions={{\r\n\t\t  \t\t\tlegend: {display: false},\r\n\t\t  \t\t\ttitle: {display: true, text: `Current state in ${country}`}\r\n\t\t  \t\t}}\r\n\t\t  \t/>\r\n\t\t  ) : null\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t{country ? barChart : lineChart}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handelCountryChange }) => {\r\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t}\r\n\r\n\t\tfetchAPI();\r\n\t}, [setFetchedCountries]);\r\n\r\n\t//console.log(fetchedCountries);\r\n\r\n\treturn (\r\n\t\t<FormControl className={styles.formControl}>\r\n\t\t\t<NativeSelect defaultValue=\"\" onChange={(e) => handelCountryChange(e.target.value)}>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{fetchedCountries.map((country, i) => \r\n\t\t\t\t\t<option key={i} value={country}>\r\n\t\t\t\t\t\t{country}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t)}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t)\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImage from './images/coronaImage.png';\r\n\r\nclass App extends React.Component {\r\n\tstate = {\r\n\t\tdata: {},\r\n\t\tcountry: '',\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst fetchedData = await fetchData();\r\n\r\n\t\tthis.setState({ data: fetchedData });\r\n\t}\r\n\r\n\thandelCountryChange = async (country) => {\r\n\t\tconst fetchedData = await fetchData(country);\r\n\r\n\t\tthis.setState({ data: fetchedData, country: country });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { data, country } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t  <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n\t\t\t  <Cards data={data} />\r\n\t\t\t  <CountryPicker handelCountryChange={this.handelCountryChange} />\r\n\t\t\t  <Chart data={data} country={country}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__OFDsB\",\"image\":\"App_image__29jJL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__ILRqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3tWNF\"};","module.exports = __webpack_public_path__ + \"static/media/coronaImage.d7265326.png\";"],"sourceRoot":""}